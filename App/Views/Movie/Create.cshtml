@model App.Movie

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm(
    "Create",
    "Movie",
    null,
    FormMethod.Post,
    new { enctype = "multipart/form-data" }
    ))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TotalTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalTime, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Director, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Director", (SelectList)ViewBag.Directors, "Choose the director", new { @class = "director form-control", id = "loadedDirector" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Genres, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("Genre", (IEnumerable<SelectListItem>)ViewBag.Genres, "Choose the genre", new { @class = "genres form-control", id = "loadedGenres" })
            <br />
            <div id="SelectedGenres"></div>
            <button type="button" id="deleteAllGenres">Delete all</button>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownList("Actor", (SelectList)ViewBag.Actors, "Choose the actor", new { @class = "actors form-control", id = "loadedActors" })
            <br />
            <div id="SelectedActors"></div>
            <button type="button" id="deleteAllActors">Delete all</button>
            <input type="hidden" id="hiddenDirector" name="hiddenDirector" />
            <input type="hidden" id="hiddenGenres" name="hiddenGenres" />
            <input type="hidden" id="hiddenActors" name="hiddenActors" />
        </div>
        <br />
        <div class="form-group">
            @Html.Label("Picture", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                <input type="file" id="Picture" multiple
                       accept="image/*" name="files" />

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*@Scripts.Render("~/Scripts/SelectItems.js")*@
    <script>
        var genreDisplayId = document.getElementById('SelectedGenres');
        var actorDisplayId = document.getElementById('SelectedActors');

        saveSelectedDirector();
        saveSelectedGenres(genreDisplayId);
        saveSelectedActors(actorDisplayId);
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
